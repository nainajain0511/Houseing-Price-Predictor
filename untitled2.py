# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iCQlwBFpO7ZOyAai1mFDLUOO3X1TKj2g
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')



data = pd.read_csv('housing.csv')

data.dropna(inplace = True)

from sklearn.model_selection import train_test_split
X = data.drop('median_house_value', axis = 1)
y = data['median_house_value']

data['total_bedrooms'] = np.log(data['total_bedrooms'] + 1)
data['total_rooms'] = np.log(data['total_rooms'] + 1)
data['population'] = np.log(data['population'] + 1)
data['households'] = np.log(data['households'] + 1)

data = data.join(pd.get_dummies(data['ocean_proximity'], dtype = int)).drop(['ocean_proximity'], axis = 1)

#feature engineering
data['rooms_per_household'] = data['total_rooms'] / data['households']
data['bedrooms_per_room'] = data['total_bedrooms'] / data['total_rooms']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)

train_data = X_train.join(y_train)

X_train = train_data.drop('median_house_value', axis = 1)
y_train = train_data['median_house_value']

test_data = X_test.join(y_test)



from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler
from sklearn.pipeline import Pipeline

scaler = StandardScaler()



X_train_s = scaler.fit_transform(X_train)
X_test_s = scaler.transform(X_test)

reg = LinearRegression()
reg.fit(X_train, y_train)

from sklearn.ensemble import RandomForestRegressor

forest = RandomForestRegressor()

forest.fit(X_train, y_train)

